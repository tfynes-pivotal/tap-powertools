---
apiVersion: scanning.apps.tanzu.vmware.com/v1beta1
kind: ScanPolicy
metadata:
  name: scan-policy
spec: 
  regoFile: |
           package main
           # Accepted Values: "Critical", "High", "Medium", "Low", "Negligible", "UnknownSeverity"
           notAllowedSeverities := []
           ignoreCves := ["CVE-2016-1000027","GHSA-3mc7-4q67-w48m","GHSA-36p3-wjmg-h94x","CVE-2021-43877","GHSA-7jgj-8wvc-jh57","GHSA-5f2m-466j-3848","GHSA-xhfc-gr8f-ffwc","CVE-2022-42003","GHSA-jjjh-jjxp-wpff","GHSA-77xx-rxvh-q682"]
           contains(array, elem) = true {
            array[_] = elem
           } else = false { true }
           isSafe(match) {
            severities := { e | e := match.ratings.rating.severity } | { e | e := match.ratings.rating[_].severity }
            some i
            fails := contains(notAllowedSeverities, severities[i])
            not fails
           }
           isSafe(match) {
            ignore := contains(ignoreCves, match.id)
            ignore
           }
           deny[msg] {
            comps := { e | e := input.bom.components.component } | { e | e := input.bom.components.component[_] }
            some i
            comp := comps[i]
            vulns := { e | e := comp.vulnerabilities.vulnerability } | { e | e := comp.vulnerabilities.vulnerability[_] }
            some j
            vuln := vulns[j]
            ratings := { e | e := vuln.ratings.rating.severity } | { e | e := vuln.ratings.rating[_].severity }
            not isSafe(vuln)
            msg = sprintf("CVE %s %s %s", [comp.name, vuln.id, ratings])
           }
